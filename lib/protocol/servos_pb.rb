# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: servos.proto

require 'google/protobuf'

require_relative 'google/protobuf/wrappers_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "eva.Global" do
    optional :power_control, :enum, 1, "eva.Global.PowerControl"
    optional :heartbeat_control, :message, 2, "eva.HeartbeatControl"
    optional :reset_all_errors, :message, 3, "google.protobuf.BoolValue"
    optional :io_state, :message, 4, "eva.IOState"
    optional :led_control, :message, 5, "eva.LEDControl"
  end
  add_enum "eva.Global.PowerControl" do
    value :POWER_CONTROL_NONE, 0
    value :POWER_CONTROL_OFF, 1
    value :POWER_CONTROL_ON, 2
  end
  add_message "eva.HeartbeatControl" do
    optional :timeout, :message, 1, "google.protobuf.UInt32Value"
    optional :interval, :message, 2, "google.protobuf.UInt32Value"
    optional :enabled, :message, 3, "google.protobuf.BoolValue"
  end
  add_message "eva.IOState" do
    optional :input, :message, 1, "eva.IODirection"
    optional :output, :message, 2, "eva.IODirection"
  end
  add_message "eva.IODirection" do
    optional :d0, :message, 1, "google.protobuf.BoolValue"
    optional :d1, :message, 2, "google.protobuf.BoolValue"
    optional :d2, :message, 3, "google.protobuf.BoolValue"
    optional :d3, :message, 4, "google.protobuf.BoolValue"
    optional :a0, :message, 5, "google.protobuf.FloatValue"
    optional :a1, :message, 6, "google.protobuf.FloatValue"
  end
  add_message "eva.LEDControl" do
    optional :button_1, :message, 1, "eva.LED"
    optional :button_2, :message, 2, "eva.LED"
  end
  add_message "eva.LED" do
    optional :red, :message, 1, "google.protobuf.UInt32Value"
    optional :green, :message, 2, "google.protobuf.UInt32Value"
    optional :blue, :message, 3, "google.protobuf.UInt32Value"
  end
  add_message "eva.Servo" do
    optional :servo_id, :uint32, 1
    optional :telemetry, :message, 2, "eva.Telemetry"
    optional :heartbeat, :message, 3, "eva.Heartbeat"
    optional :thresholds, :message, 4, "eva.Thresholds"
    optional :servo_configuration, :message, 5, "eva.ServoConfiguration"
    optional :servo_control, :message, 6, "eva.ServoControl"
    optional :errors, :message, 7, "eva.Errors"
    optional :pid_settings, :message, 8, "eva.PIDSettings"
  end
  add_message "eva.Telemetry" do
    optional :drive_temp, :message, 1, "google.protobuf.UInt32Value"
    optional :motor_temp, :message, 2, "google.protobuf.UInt32Value"
    optional :current, :message, 3, "google.protobuf.UInt32Value"
    optional :position, :message, 4, "google.protobuf.FloatValue"
    optional :velocity, :message, 5, "google.protobuf.FloatValue"
  end
  add_message "eva.Heartbeat" do
    optional :code, :message, 1, "google.protobuf.UInt32Value"
    optional :timestamp, :message, 2, "google.protobuf.UInt32Value"
    optional :valid, :message, 3, "google.protobuf.BoolValue"
  end
  add_message "eva.Thresholds" do
    optional :max_current_soft, :message, 1, "google.protobuf.UInt32Value"
    optional :max_current_hard, :message, 2, "google.protobuf.UInt32Value"
    optional :max_pwm_duty, :message, 3, "google.protobuf.UInt32Value"
    optional :drive_temp_soft, :message, 4, "google.protobuf.Int32Value"
    optional :drive_temp_hard, :message, 5, "google.protobuf.Int32Value"
    optional :motor_temp_soft, :message, 6, "google.protobuf.Int32Value"
    optional :motor_temp_hard, :message, 7, "google.protobuf.Int32Value"
  end
  add_message "eva.ServoControl" do
    optional :reset_default, :message, 1, "google.protobuf.BoolValue"
    optional :reset_soft, :message, 2, "google.protobuf.BoolValue"
    optional :enabled, :message, 3, "google.protobuf.BoolValue"
    optional :reset_comms, :message, 4, "google.protobuf.BoolValue"
    optional :servo_state, :enum, 5, "eva.ServoControl.ServoState"
    optional :pid_state, :enum, 6, "eva.ServoControl.PIDState"
  end
  add_enum "eva.ServoControl.ServoState" do
    value :SERVO_STATE_NONE, 0
    value :SERVO_STATE_STOPPED, 1
    value :SERVO_STATE_MOTION, 2
  end
  add_enum "eva.ServoControl.PIDState" do
    value :PID_STATE_NONE, 0
    value :PID_STATE_HOLD, 1
    value :PID_STATE_TOOLPATH_RUNNING, 2
  end
  add_message "eva.PIDSettings" do
    optional :single_layer_controller, :message, 1, "eva.PID"
    optional :cascade_controller, :message, 2, "eva.CascadeController"
    optional :current_controller, :message, 3, "eva.PID"
  end
  add_message "eva.CascadeController" do
    optional :position, :message, 1, "eva.PID"
    optional :speed, :message, 2, "eva.PID"
  end
  add_message "eva.PID" do
    optional :p, :message, 1, "google.protobuf.FloatValue"
    optional :i, :message, 2, "google.protobuf.FloatValue"
    optional :d, :message, 3, "google.protobuf.FloatValue"
    optional :s, :message, 4, "google.protobuf.FloatValue"
    optional :t, :message, 5, "google.protobuf.FloatValue"
    optional :frequency, :message, 6, "google.protobuf.UInt32Value"
    optional :max_command, :message, 7, "google.protobuf.FloatValue"
  end
  add_message "eva.ServoConfiguration" do
    optional :servo_mode, :enum, 1, "eva.ServoConfiguration.ServoMode"
    optional :ratio_motor, :message, 2, "google.protobuf.FloatValue"
    optional :ratio_output, :message, 3, "google.protobuf.FloatValue"
    optional :commutation_mode, :enum, 4, "eva.ServoConfiguration.CommutationMode"
    optional :motor_pole_count, :message, 5, "google.protobuf.UInt32Value"
    optional :motor_pwm_frequency, :message, 6, "google.protobuf.UInt32Value"
    optional :invert_motor_command, :message, 7, "google.protobuf.BoolValue"
    optional :encoder_enabled, :enum, 8, "eva.ServoConfiguration.EncodersEnabled"
    optional :setpoint_timestep, :message, 9, "google.protobuf.UInt32Value"
    optional :pdo_frequency, :message, 10, "google.protobuf.UInt32Value"
    optional :set_home_position, :message, 11, "google.protobuf.BoolValue"
    optional :static_friction, :message, 12, "google.protobuf.FloatValue"
    optional :max_position_error, :message, 13, "google.protobuf.FloatValue"
    optional :min_angle, :message, 14, "google.protobuf.FloatValue"
    optional :max_angle, :message, 15, "google.protobuf.FloatValue"
    optional :invert_angles, :enum, 16, "eva.ServoConfiguration.InvertAngles"
    optional :allow_danger, :enum, 17, "eva.ServoConfiguration.AllowDanger"
    optional :torque_target, :message, 18, "google.protobuf.UInt32Value"
  end
  add_enum "eva.ServoConfiguration.ServoMode" do
    value :SERVO_MODE_NONE, 0
    value :SERVO_MODE_MOTOR, 1
    value :SERVO_MODE_SINGLE_LAYER, 2
    value :SERVO_MODE_DOUBLE_LAYER, 3
    value :SERVO_MODE_TRIPLE_LAYER, 4
    value :SERVO_MODE_TEST, 5
    value :SERVO_MODE_SCALE, 6
    value :SEROV_MODE_CURRENT_PID_TUNE, 7
    value :SERVO_MODE_TORQUE, 8
  end
  add_enum "eva.ServoConfiguration.CommutationMode" do
    value :COMU_MODE_NONE, 0
    value :COMU_MODE_SQUARE_WAVE, 1
    value :COMU_MODE_SINE_WAVE, 2
    value :COMU_MODE_SINEWAVE_PID, 3
  end
  add_enum "eva.ServoConfiguration.EncodersEnabled" do
    value :ENCODERS_ENABLED_NONE, 0
    value :ENCODERS_ENABLED_INPUT, 1
    value :ENCODERS_ENABLED_OUTPUT, 2
    value :ENCODERS_ENABLED_BOTH, 3
  end
  add_enum "eva.ServoConfiguration.InvertAngles" do
    value :INVERT_ANGLES_NONE, 0
    value :INVERT_ANGLES_ENABLED, 1
    value :INVERT_ANGLES_DISABLED, 2
  end
  add_enum "eva.ServoConfiguration.AllowDanger" do
    value :ALLOW_DANGER_NONE, 0
    value :NO_DANGEROUS_MODES, 1
    value :DANGEROUS_MODES_ALLOWED, 2
  end
  add_message "eva.Errors" do
    optional :error_state, :enum, 1, "eva.Errors.ErrorState"
    optional :hardware_startup, :message, 2, "google.protobuf.BoolValue"
    optional :can_bus, :message, 3, "google.protobuf.BoolValue"
    optional :motor_encoder, :message, 4, "google.protobuf.BoolValue"
    optional :output_encoder, :message, 5, "google.protobuf.BoolValue"
    optional :drv8305, :message, 6, "google.protobuf.BoolValue"
    optional :board_temperature, :message, 7, "google.protobuf.BoolValue"
    optional :motor_temperature, :message, 8, "google.protobuf.BoolValue"
    optional :soft_current_limit, :message, 9, "google.protobuf.BoolValue"
    optional :hard_current_limit, :message, 10, "google.protobuf.BoolValue"
    optional :hall_effect_sensor, :message, 11, "google.protobuf.BoolValue"
    optional :pid_angle, :message, 12, "google.protobuf.BoolValue"
    optional :encoder_mismatch, :message, 13, "google.protobuf.BoolValue"
    optional :torque_sensor, :message, 14, "google.protobuf.BoolValue"
    optional :angle_range, :message, 15, "google.protobuf.BoolValue"
    optional :setpoints_mismatch, :message, 16, "google.protobuf.BoolValue"
    optional :setpoints_missing, :message, 17, "google.protobuf.BoolValue"
    optional :reset_errors, :message, 18, "google.protobuf.BoolValue"
    optional :safety_torque_limit, :message, 19, "google.protobuf.BoolValue"
    optional :over_current, :message, 20, "google.protobuf.BoolValue"
    optional :average_power_limit, :message, 21, "google.protobuf.BoolValue"
    optional :over_voltage, :message, 22, "google.protobuf.BoolValue"
    optional :setpoints_buffer_full, :message, 23, "google.protobuf.BoolValue"
    optional :setpoints_missing_halt, :message, 24, "google.protobuf.BoolValue"
    optional :protocol_error, :message, 25, "google.protobuf.BoolValue"
    optional :under_voltage, :message, 26, "google.protobuf.BoolValue"
  end
  add_enum "eva.Errors.ErrorState" do
    value :ERROR_NONE, 0
    value :ERROR_OK, 1
    value :ERROR_SOFT, 2
    value :ERROR_HARD, 3
  end
end

module Eva
  Global = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Global").msgclass
  Global::PowerControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Global.PowerControl").enummodule
  HeartbeatControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.HeartbeatControl").msgclass
  IOState = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.IOState").msgclass
  IODirection = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.IODirection").msgclass
  LEDControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.LEDControl").msgclass
  LED = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.LED").msgclass
  Servo = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Servo").msgclass
  Telemetry = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Telemetry").msgclass
  Heartbeat = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Heartbeat").msgclass
  Thresholds = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Thresholds").msgclass
  ServoControl = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoControl").msgclass
  ServoControl::ServoState = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoControl.ServoState").enummodule
  ServoControl::PIDState = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoControl.PIDState").enummodule
  PIDSettings = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.PIDSettings").msgclass
  CascadeController = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.CascadeController").msgclass
  PID = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.PID").msgclass
  ServoConfiguration = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration").msgclass
  ServoConfiguration::ServoMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration.ServoMode").enummodule
  ServoConfiguration::CommutationMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration.CommutationMode").enummodule
  ServoConfiguration::EncodersEnabled = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration.EncodersEnabled").enummodule
  ServoConfiguration::InvertAngles = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration.InvertAngles").enummodule
  ServoConfiguration::AllowDanger = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.ServoConfiguration.AllowDanger").enummodule
  Errors = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Errors").msgclass
  Errors::ErrorState = Google::Protobuf::DescriptorPool.generated_pool.lookup("eva.Errors.ErrorState").enummodule
end
